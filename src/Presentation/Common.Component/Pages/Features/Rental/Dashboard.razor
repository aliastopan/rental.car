@page "/dashboard"

@using System.Collections.Generic
@using Domain.Models
@using Infrastructure.Persistence

@inject AppDbContext AppDbContext

<div class="_dashboard">
<table>
    <tr>
        <th>Order</th>
        <th>Mobil</th>
        <th>Nama</th>
        <th>Contact</th>
        <th>KTP</th>
        <th>Tanggal Pengambilan</th>
        <th>Tanggal Pengembalian</th>
        <th>Lama Peminjaman</th>
        <th>Konfirmasi</th>
    </tr>
    @if(Orders.Count > 0)
    {
        @foreach (Order order in Orders)
        {
            <tr>
                <td>@order.Id</td>
                <td>@order.Car!.Brand</td>
                <td>@order.FullName</td>
                <td>@order.ContactNumber</td>
                <td>
                <button
                    class="btn btn-primary"
                    @onclick="@( eventArgs => ShowTKP(order))">
                    Tampilkan
                </button>
                </td>
                <td>@order.DateDepart</td>
                <td>@order.DateReturn</td>
                <td>@order.RentDuration Hari</td>
                <td>
                    @switch (@order.RentStatus)
                    {
                        case 0 :
                            <button
                                class="btn btn-warning"
                                @onclick="@( eventArgs => UpdateOrderAsync(order, 1))">
                                Konfrimasi
                            </button>
                            break;

                        case 1 :
                            <button
                                class="btn btn-info"
                                @onclick="@( eventArgs => UpdateOrderAsync(order, 2))">
                                Progress (On Going)
                            </button>
                            break;

                        case 2:
                            <button
                            class="btn btn-dark"
                                @onclick="@( eventArgs => UpdateOrderAsync(order, 3))">
                                Progress (Selesai)
                            </button>
                            break;
                        default:
                            <button class="btn btn-light">
                                Selesai
                            </button>
                            break;
                    }
                    @* @if(@order.RentStatus == 0)
                    {
                        <button
                            class="btn btn-warning"
                            @onclick="@( eventArgs => UpdateOrderAsync(order, 1))">
                            Konfrimasi
                        </button>
                    }
                    else
                    {
                        <button
                            class="btn btn-info">
                            On Progress
                        </button>
                    } *@
                </td>
            </tr>
        }
    }

    </table>
</div>

@if(image is not null)
{
    <img src="/images/ktp/@image" alt="">
}

@code{
    #nullable disable
    protected List<Order> Orders = new List<Order>();

    private string image { get; set; }

    protected override void OnInitialized()
    {
        Orders = AppDbContext.Orders.ToList();
        this.StateHasChanged();
    }

    protected void ShowTKP(Order order)
    {
        image = order.KTP;
        System.Console.WriteLine(image);
        this.StateHasChanged();
    }

    protected async Task UpdateOrderAsync(Order order)
    {
        order.RentStatus = 1;
        await AppDbContext.UpdateOrderAsync(order);
        this.StateHasChanged();
    }

    protected async Task UpdateOrderAsync(Order order, int rentStatus)
    {
        order.RentStatus = rentStatus;
        await AppDbContext.UpdateOrderAsync(order);
        if(rentStatus == 3)
        {
            System.Console.WriteLine("CAR STATUS UPDATE TO FALSE");
            order.Car.Status = false;
            await AppDbContext.UpdateCarAsync(order.Car);
        }

        this.StateHasChanged();
    }

    protected Car GetCar(int carId)
    {
        var(car, status) = AppDbContext.GetCar(carId);
        return car;
    }
}